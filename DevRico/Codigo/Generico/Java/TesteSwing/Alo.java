
//package PackTeste;

import java.awt.*;
import java.net.URL;
import java.sql.*;

/**
 * This class was generated by a SmartGuide.
 *
 */
public class Alo extends Frame implements java.awt.event.ActionListener, java.awt.event.WindowListener {
	private Button ivjButtonAvalie = null;
	private Label ivjLabel1 = null;
	private Label ivjLabel2 = null;
	private TextArea ivjTextAreaResultado = null;
	private TextField ivjTextFieldSentenca = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public Alo() {
	super();
	initialize();
}

/**
 * Alo constructor comment.
 * @param title java.lang.String
 */
public Alo(String title) {
	super(title);
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if ((e.getSource() == getButtonAvalie()) ) {
		conn1(e);
	}
	// user code begin {2}
	// user code end
}

/**
 * conn0:  (Alo.window.windowClosing(java.awt.event.WindowEvent) --> Alo.dispose())
 * @param arg1 java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn0(java.awt.event.WindowEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.dispose();
		// user code begin {2}
		// Saida do sistema
		System.exit(0);
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn1:  (ButtonAvalie.action.actionPerformed(java.awt.event.ActionEvent) --> Alo.selecionar()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.selecionar();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * This method was created by a SmartGuide.
 * @param rs java.sql.ResultSet
 * @exception java.sql.SQLException The exception description.
 */
public synchronized void dispResultSet( ResultSet rs ) throws SQLException {

	getTextAreaResultado().setText("");

	int i;
	ResultSetMetaData rsmd = rs.getMetaData ();
	int numCols = rsmd.getColumnCount ();
	String Linha="";

	for (i=1; i<=numCols; i++) {
	   if (i > 1) Linha += ",";
	   Linha+=rsmd.getColumnLabel(i);
	}
	getTextAreaResultado().append(Linha+'\n');

	Linha = "";
	boolean more = rs.next ();
	while (more) {
	   for (i=1; i<=numCols; i++) {
	      if (i > 1) Linha+=",";
	      Linha+=rs.getString(i);
	   }
		getTextAreaResultado().append(Linha+'\n');
		Linha = "";
	   more = rs.next ();
	}

	return;
}
/**
 * Return the ButtonAvalie property value.
 * @return java.awt.Button
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Button getButtonAvalie() {
	if (ivjButtonAvalie == null) {
		try {
			ivjButtonAvalie = new java.awt.Button();
			ivjButtonAvalie.setName("ButtonAvalie");
			ivjButtonAvalie.setBounds(398, 96, 79, 30);
			ivjButtonAvalie.setLabel("Avalie");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjButtonAvalie;
}

/**
 * Return the Label1 property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getLabel1() {
	if (ivjLabel1 == null) {
		try {
			ivjLabel1 = new java.awt.Label();
			ivjLabel1.setName("Label1");
			ivjLabel1.setText("Resultado Consulta");
			ivjLabel1.setBounds(10, 108, 125, 30);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjLabel1;
}

/**
 * Return the Label2 property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getLabel2() {
	if (ivjLabel2 == null) {
		try {
			ivjLabel2 = new java.awt.Label();
			ivjLabel2.setName("Label2");
			ivjLabel2.setText("Sentença:");
			ivjLabel2.setBounds(11, 30, 125, 30);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjLabel2;
}

/**
 * Return the TextAreaResultado property value.
 * @return java.awt.TextArea
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextArea getTextAreaResultado() {
	if (ivjTextAreaResultado == null) {
		try {
			ivjTextAreaResultado = new java.awt.TextArea();
			ivjTextAreaResultado.setName("TextAreaResultado");
			ivjTextAreaResultado.setBounds(12, 140, 466, 189);
			ivjTextAreaResultado.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjTextAreaResultado;
}

/**
 * Return the TextFieldSentenca property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextField getTextFieldSentenca() {
	if (ivjTextFieldSentenca == null) {
		try {
			ivjTextFieldSentenca = new java.awt.TextField();
			ivjTextFieldSentenca.setName("TextFieldSentenca");
			ivjTextFieldSentenca.setBounds(9, 63, 470, 21);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjTextFieldSentenca;
}

/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}

/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() {
	// user code begin {1}
	// user code end
	this.addWindowListener(this);
	getButtonAvalie().addActionListener(this);
}

/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	// user code begin {1}
	// user code end
	setName("Alo");
	setName("Alo");
	setLayout(null);
	setSize(503, 347);
	setTitle("Teste Acesso Em Java (c) Giuseppe 1999");
	add(getTextAreaResultado(), getTextAreaResultado().getName());
	add(getLabel1(), getLabel1().getName());
	add(getTextFieldSentenca(), getTextFieldSentenca().getName());
	add(getLabel2(), getLabel2().getName());
	add(getButtonAvalie(), getButtonAvalie().getName());
	initConnections();
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	// insert code to start the application here

	Alo Eu;
	Eu = new Alo();
	Eu.setVisible(true);
}
/**
 * This method was created by a SmartGuide.
 */
public synchronized void newMethod ( ) {
	return;
}
/**
 * This method was created by a SmartGuide.
 */
public synchronized void selecionar ( ) {

   String url   = "jdbc:odbc:AcessoOracle";
	String query = getTextFieldSentenca().getText();
	try {
	Class.forName ("sun.jdbc.odbc.JdbcOdbcDriver");

   Connection con = DriverManager.getConnection (url, "gproment", "quark");
	DatabaseMetaData dma = con.getMetaData ();

	Statement stmt = con.createStatement ();

	ResultSet rs = stmt.executeQuery (query);

	dispResultSet (rs);

	rs.close();
	stmt.close();
	con.close();
	}
	catch (java.lang.Exception ex) {
   ex.printStackTrace ();  }
	return;
}
/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowActivated(java.awt.event.WindowEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	// user code end
}

/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowClosed(java.awt.event.WindowEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	// user code end
}

/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowClosing(java.awt.event.WindowEvent e) {
	// user code begin {1}
	// user code end
	if ((e.getSource() == this) ) {
		conn0(e);
	}
	// user code begin {2}
	// user code end
}

/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowDeactivated(java.awt.event.WindowEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	// user code end
}

/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowDeiconified(java.awt.event.WindowEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	// user code end
}

/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowIconified(java.awt.event.WindowEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	// user code end
}

/**
 * Method to handle events for the WindowListener interface.
 * @param e java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void windowOpened(java.awt.event.WindowEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	// user code end
}

}
