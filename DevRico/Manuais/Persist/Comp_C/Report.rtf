{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1046{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\widctlpar\adjustright \i\lang2057\cgrid \sbasedon0 \snext15 Rose_Label;}{
\s16\li284\sa200\nowidctlpar\widctlpar\adjustright \b\fs28\lang2057\cgrid \sbasedon0 \snext16 Rose_Class;}{\s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid \sbasedon0 \snext17 Rose_Decl;}{
\s18\li284\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid \sbasedon0 \snext18 Rose_CDoc;}{\s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid \sbasedon0 \snext19 Rose_Doc;}{
\s20\li284\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid \sbasedon0 \snext20 Rose_SClass;}{\s21\nowidctlpar\widctlpar\adjustright \b\fs28\lang2057\cgrid \sbasedon0 \snext21 Rose_Heading1;}}{\info{\author Giuseppe Enrico Proment Jr.}
{\operator Giuseppe Enrico Proment Jr.}{\creatim\yr2000\mo5\dy23\hr22\min2}{\revtim\yr2000\mo5\dy24\hr15\min28}{\version4}{\edmins7}{\nofpages2}{\nofwords576}{\nofchars3286}{\*\company AMC}{\nofcharsws0}{\vern73}}\margl1701\margr1701\margt1417\margb1417 
\widowctrl\ftnbj\aenddoc\hyphhotz425\hyphcaps0\viewkind4\viewscale120 \fet0\sectd \linex0\headery709\footery709\colsx709\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang
{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \b\fs28\lang2057\cgrid {\fs24\lang1046\cgrid0 x0}{Classes
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \i\lang2057\cgrid {Class name:
\par }\pard\plain \s16\li284\sa200\nowidctlpar\widctlpar\adjustright \b\fs28\lang2057\cgrid {IComponent}{\pard\plain \s16\li284\sa200\nowidctlpar\widctlpar\adjustright \b\v\fs28\lang2057\cgrid {\xe {IComponent}{\i  -- class}{}}}{
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \i\lang2057\cgrid {Documentation:
\par }\pard\plain \s18\li284\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid {subclasse de TComponent da VCL (Visual Classes Library) com capacidade igual ao esquema de notifica\'e7\'e3o implementado pela "IFrameWork".
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \i\lang2057\cgrid {Superclasses:
\par }\pard\plain \s20\li284\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid {TComponent
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \i\lang2057\cgrid {Roles/Associations:
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid <none>
\par \pard\plain \s15\nowidctlpar\widctlpar\adjustright \i\lang2057\cgrid {Attributes:
\par }\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {m_Pronto : bool}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {m_Pronto}{\i  -- attributes}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid 'true' se o componente esta preparado. \'e9 utilizado pela 'property' IsPronto.
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {m_notificarObservadores; : bool }{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {m_notificarObservadores;}{\i  -- attributes}{\:
IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid 'true' se deve notificar os observadores quanto aos eventos disparados.
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {m_nomeClasse : IString}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {m_nomeClasse}{\i  -- attributes}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid cont\'e9m o nome da classe, deve ser atribuida pelo m todo setnomeClasse, utilizada pelo m\'e9todo nomeClasse.
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {m_Observadores : ListaPointer<IComponent> }{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {m_Observadores}{\i  -- attributes}{\:
IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid Lista de observadores que receber\'e3o notifica\'e7\'e3o de eventos. \'c9 uma classe template. Observadores s\'e3o adicionados e removidos pelos m\'e9
todosNotificarEventosPara e ParaNotificarEventosPara respectivamente.
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {IsPronto : __property bool}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {IsPronto}{\i  -- attributes}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid propriedade que ser\'e1 true quando o componente estiver corretamente inicializado  __property bool IsPronto=\{read=getPronto\}
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {evtDefault : TypeEvento = IComponent::Default}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {evtDefault}{\i  -- attributes}{\:
IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid TypeEvento \'e9 sinonimo de char* que \'e9 o tipo do dado usado para construir objetos do tipo IeventoNotifica\'e7\'e3o, podem existir v\'e1rios eventos definidos
 pela classe, por exemplo  TypeEvento IMinhaClasse::evtMudado = "IMinhaClasse::evtMudado", este dado ser\'e1 usado pela classe notificada para saber que tipo de evento ocorreu na classe notificadora que \'e9 enviada junto no objeto evento.
\par \pard\plain \s15\nowidctlpar\widctlpar\adjustright \i\lang2057\cgrid {Has-A Relationships:
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid <none>
\par \pard\plain \s15\nowidctlpar\widctlpar\adjustright \i\lang2057\cgrid {Operations:
\par }\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {getPronto( ) : bool}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {getPronto}{\i  -- operation}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid m\'e9todo 'get' da 'property' IsPronto.
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {Loaded( ) : void}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {Loaded}{\i  -- operation}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid m\'e9todo herdado do TComponent que \'e9 chamado quando o componente acabou de ser lido da fila ( arquivo...) e teve suas propriedades 'property' escritas.
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {WriteState( Writer : TWriter*) : void}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {WriteState}{\i  -- operation}{\:IComponent}}}{

\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid m\'e9todo herdado do TComponent, que \'e9 chamado quando o componente ser\'e1 gravado em uma fila ( arquivo, form ).
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {fazerRevisao( ) : void}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {fazerRevisao}{\i  -- operation}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid m\'e9todo abstrato que deve ser definido pelo subclasse.
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {IComponent( Owner : TComponent*)}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {IComponent}{\i  -- operation}{\:IComponent}}}{

\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid Construtor requerido para uso dentro do ambiente da IDE do C++Builder
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {ligaNotificarObservadores( ) : IComponent*}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {ligaNotificarObservadores}{\i 
 -- operation}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid passa a fazer notifica\'e7\'e3o.
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {desligaNotificarObservadores( ) : IComponent*}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {desligaNotificarObservadores}{\i 
 -- operation}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid passa a n\'e3o fazer notifica\'e7\'e3o.
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {NotificarEventosPara( Observador : IComponent*) : IComponent*}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {NotificarEventosPara}{
\i  -- operation}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid Inclui o componente na lista de Observadores
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {notificarObservadores( evento : IEventoNotificacao&) : IComponent*}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {
notificarObservadores}{\i  -- operation}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid deve ser chamado para enviar o evento. \'c9 chamado pela subclasse. O evento conter\'e1 this, que \'e9
 o notificadore o identificador de evento ( vide atributo evtDefault ).
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {PararNotificarEventosPara( Observador : IComponent*) : IComponent*}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {
PararNotificarEventosPara}{\i  -- operation}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid remove o Observador da lista.
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {quandoEventoNotificacao( evento : IEventoNotificacao&) : IComponent*}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {
quandoEventoNotificacao}{\i  -- operation}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid este m\'e9todo ser\'e1 chamado toda vez que um evento checar ao Observador. Deve ser sobrescrito pela subclasse, na implementa\'e7\'e3
o de IComponent nada faz. um exemplo de c digo seria: if (evento.notificador.nomeClasse()=="IBDataStoreJasmim") 
\par if ( evento.evento==IBDataStoreJasmim::evtDesligado )      // fa\'e7a algo
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {nomeClasse( ) : IString}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {nomeClasse}{\i  -- operation}{\:IComponent}}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid M\'e9todo 'get' retorna o nome da classe.
\par \pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\fs20\lang2057\cgrid {setnomeClasse( value : IString) : void}{\pard\plain \s17\li284\nowidctlpar\widctlpar\adjustright \b\v\fs20\lang2057\cgrid {\xe {setnomeClasse}{\i  -- operation}{\:IComponent}
}}{
\par }\pard\plain \s19\qj\li567\sa200\nowidctlpar\widctlpar\adjustright \fs20\lang2057\cgrid m\'e9todo 'set' do nomeClasse.
\par }